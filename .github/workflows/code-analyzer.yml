name: Salesforce Code Analyzer Workflow
on:
  pull_request:
    branches: [ staging, main]
    types: [opened, synchronize, ready_for_review]
  workflow_call:
    inputs:
      ref:
        description: "Branch or SHA to analyze"
        required: true
        type: string

jobs:
  salesforce-code-analyzer-workflow:
    if: ${{ (github.event_name == 'pull_request' && github.event.pull_request != null && github.event.pull_request.draft == false) || github.event_name == 'workflow_call' }}
    permissions:
      pull-requests: write
      contents: read
      actions: read
    runs-on: ubuntu-latest

    steps:
      - name: Check out files
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref || github.ref }}

      - uses: actions/github-script@v7
        id: changed
        with:
          script: |
            const pr = context.payload.pull_request;

            // If this run is a PR run, collect changed files from the PR.
            if (pr) {
              const files = await github.paginate(
                github.rest.pulls.listFiles,
                { owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number, per_page: 100 }
              );
              const keep = files
                .filter(f => f.status !== 'removed' &&
                       (f.filename.endsWith('.html') ||
                        f.filename.endsWith('.js') ||
                        f.filename.endsWith('.css') ||
                        f.filename.endsWith('.cls') ||
                        f.filename.endsWith('.trigger') ||
                        f.filename.endsWith('.xml')
                       ))
                .map(f => f.filename);
              core.setOutput('any_changed', String(keep.length > 0));
              core.setOutput('files_nl', keep.join('\n'));
              return;
            }

            // No PR context: fall back to git diff between main and provided ref
            const inputRef = inputs.ref || github.ref || 'HEAD';
            // Ensure remote/main is available
            try {
              await exec.exec('git', ['fetch', '--no-tags', 'origin', 'main:refs/remotes/origin/main'], { silent: true });
            } catch (e) {
              core.info('Could not fetch origin/main, continuing with local refs.');
            }
            // Produce list of changed files relative to origin/main (if exists) or to HEAD
            let base = 'origin/main';
            try {
              await exec.exec('git', ['rev-parse', '--verify', base], { silent: true });
            } catch (e) {
              base = 'HEAD';
            }
            const out = await exec.getExecOutput('git', ['diff', '--name-only', `${base}`, `${inputRef}`]);
            const files = out.stdout.split(/\r?\n/).filter(Boolean);
            const keep = files.filter(f =>
              (f.endsWith('.html') || f.endsWith('.js') || f.endsWith('.css') ||
               f.endsWith('.cls') || f.endsWith('.trigger') || f.endsWith('.xml'))
            );
            core.setOutput('any_changed', String(keep.length > 0));
            core.setOutput('files_nl', keep.join('\n'));

      # 2) Short-circuit if nothing relevant changed
      - name: No relevant changes
        if: steps.changed.outputs.any_changed == 'false'
        run: echo "No Apex/LWC/JS changes â€” skipping." && exit 0

      # 3) Save and split the list (avoids overlong commands)
      - name: Prepare file lists
        id: targets
        if: steps.changed.outputs.any_changed == 'true'
        shell: bash
        run: |
          args=""
          # Consume the newline-delimited list from the previous step's output
          while IFS= read -r file; do
            args+=" --target "$(printf %q "$file")
          done <<< "${{ steps.changed.outputs.files_nl }}"
          echo "args=${args}" >> "$GITHUB_OUTPUT"
      # PREREQUISITES - Only needed if the runner doesn't already satisfy these requirements.
      - name: Ensure node v20.9.0 or greater
        if: steps.changed.outputs.any_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '>=20.9.0'
      - name: Ensure java v11 or greater
        if: steps.changed.outputs.any_changed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '>=11'
          distribution: 'zulu'
      - name: Ensure python v3.10 or greater
        if: steps.changed.outputs.any_changed == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '>=3.10'

      - name: Install Salesforce CLI
        if: steps.changed.outputs.any_changed == 'true'
        run: npm install -g @salesforce/cli@latest

      - name: Install Latest Salesforce Code Analyzer CLI Plugin
        if: steps.changed.outputs.any_changed == 'true'
        run: sf plugins install code-analyzer@latest

      - name: Run Salesforce Code Analyzer
        if: steps.changed.outputs.any_changed == 'true'
        id: run-analyzer
        uses: forcedotcom/run-code-analyzer@v2
        with:
          run-arguments: >-
            --view detail
            --output-file sfca_results.json
            ${{ steps.targets.outputs.args }}
          results-artifact-name: salesforce-code-analyzer-results
          github-token: ${{ github.token }}

      - name: Check the Outputs to Determine Whether to Fail (at least one sev1 or five sev2 violations)
        if: |
          steps.run-analyzer.outputs.exit-code > 0 ||
          steps.run-analyzer.outputs.num-sev1-violations > 0 ||
          steps.run-analyzer.outputs.num-sev2-violations > 0 ||
          steps.run-analyzer.outputs.num-sev3-violations > 5 

        run: |
             CurrentExitCode="${{ steps.run-analyzer.outputs.exit-code }}"
             Sev1Violations="${{ steps.run-analyzer.outputs.num-sev1-violations }}"
             Sev2Violations="${{ steps.run-analyzer.outputs.num-sev2-violations }}"
             Sev3Violations="${{ steps.run-analyzer.outputs.num-sev3-violations }}"
             echo "Failed exitcode: $CurrentExitCode | Violations (critical, high): $Sev1Violations $Sev2Violations $Sev3Violations"

             exit -1
